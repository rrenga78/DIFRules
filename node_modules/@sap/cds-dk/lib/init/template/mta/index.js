const { join } = require('path')
const cds = require('../../../cds')
const { exists } = cds.utils
const { copyRenderedYAML } = require('../../../util/fs')
const { readProject } = require('../../util/projectReader')
const { mergeJSON, sort } = require('../../util/merge')
const {
    APPROUTER, XSUAA, MULTITENANCY, EXTENSIBILITY,
    MTA, HELM,
    HANA, POSTGRES,
    ENTERPRISE_MESSAGING, ENTERPRISE_MESSAGING_SHARED, REDIS_MESSAGING,
    CONNECTIVITY, DESTINATION, NOTIFICATIONS
} = require('../../constants').OPTIONS
module.exports = class MtaTemplate extends require('../templateBase') {

    static hasFacet() {
        const { options } = cds.cli
        if (!options?.add.has(MTA) && options?.add.has(HELM)) return false
        return exists('mta.yaml')
    }

    getRelatedFacets() {
        return [APPROUTER, XSUAA, MULTITENANCY, HANA, POSTGRES, EXTENSIBILITY, ENTERPRISE_MESSAGING, ENTERPRISE_MESSAGING_SHARED, REDIS_MESSAGING, CONNECTIVITY, DESTINATION, NOTIFICATIONS]
    }

    async run() {
        const project = await readProject()
        if (!exists('mta.yaml')) {
            await copyRenderedYAML(join(__dirname, 'files', 'mta.yaml.hbs'), 'mta.yaml', project)
        }
        await mergeJSON('package.json', join(__dirname, 'files', 'package.json'))
        await sort('package.json', 'devDependencies')
    }
}
