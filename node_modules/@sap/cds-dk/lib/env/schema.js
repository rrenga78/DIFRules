const { join } = require('path')
const { mergeJSON } = require('../init/util/merge')
const { readJSON } = require('../util/fs')

module.exports = async function overlay4(schemaName, cwd = process.cwd()) {

    // need to load @sap/cds from current cwd which might
    // differ from initial cwd to get project specific cds version
    const cds = require(require.resolve('@sap/cds', {
        paths: [cwd, __dirname]
    }))

    // force cds.root to be project root
    cds.root = cwd

    // load defaults, throw err if schema not found
    let result;
    if (typeof cds.schema?.default4 === 'function') {
        result = await cds.schema.default4(schemaName)
    } else if (cds.env?.schemas?.[schemaName]) {
        // backwards compatibility
        result = await readJSON(cds.env.schemas[schemaName])
    } else {
        throw new Error(`cds ${cds.version} in ${cwd} does not support schema retrieval.`)
    }

    // optional, don't throw if file not found
    try {
        await mergeJSON(result, join(__dirname, 'schemas', schemaName))
        result.description = result.description + ' - overlaid'
    } catch (err) {
        if (err.code !== 'ENOENT') throw err
    }

    return result
}
