const cds = require('../cds')

module.exports = new (class BuildPlugins {
    constructor() {
        this._plugins = new Map()
    }
    getPlugins() {
        return this._plugins
    }
    getPlugin(id) {
        return this._plugins.get(id)
    }
    register(id, options) {
        if (!id || !options?.impl) {
            throw Error("Invalid build plugin parameter")
        }
        if (this._plugins.has(id)) {
            throw Error(`Build plugin ${id} already registered`)
        }
        this._plugins.set(id, {
            id,
            class: this._loadPlugin(id, options.impl),
            description: options.description,
            taskDefaults: options.taskDefaults ?? {}
        })
    }
    _loadPlugin(id, impl) {
        try {
            // project-local module is preferred - otherwise from our own dependencies
            return require(require.resolve(impl, { paths: [cds.root, __dirname] })) 
        } catch (e) {
            throw new Error(`Custom build plugin implementation '${impl}' for '${id}' cannot be loaded:\n` + e)
        }
    }
})