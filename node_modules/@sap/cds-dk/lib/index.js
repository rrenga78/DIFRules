const cds = module.exports = require('./cds')
cds.extend (cds.constructor) .with (class {
  get import() { return super.import = require('./import/importapi') }
})

cds.extend (cds.compile.to.constructor) .with (class {
  get asyncapi() { return super.asyncapi = require('./compile/asyncapi') }
  get openapi() { return super.openapi = require('./compile/openapi') }
  get xsuaa(){ return super.xsuaa = require('./compile/to-xsuaa') }
  'edmx-v2'(csn,o) { return cds.compile.to.edmx(csn,{...o,flavor:'v2'}) }
  'edmx-v4'(csn,o) { return cds.compile.to.edmx(csn,{...o,flavor:'v4'}) }
  'edmx-w4'(csn,o) { return cds.compile.to.edmx(csn,{...o,flavor:'w4'}) }
  'edmx-x4'(csn,o) { return cds.compile.to.edmx(csn,{...o,flavor:'x4'}) }
})

// Compat to cds <=6. Esp. BAS tools need it, see cap/issues#13918
// TODO remove compat w/ cds-dk 8
if (cds.compile.to.constructor.name === 'Object') { // not a class as in cds 7
  cds.compile.to.xsuaa = require('./compile/to-xsuaa')
}

// add overlay4 method to cds.schema to retrieve schema with cds-dk features
// schema is cds version specific; add cds-dk parts not present in cds, e.g. build
// failsafe for legacy cds without schema.constructor
cds.extend(cds.schema?.constructor || {}).with(class {
  get overlay4() { return super.overlay4 = require('./env/schema') }
})

// set build API, potentially removing the old API facade from sap/cds 7
// delete cds.__proto__?.build //> not required, as its overriden below anyways
cds.extend (cds.constructor) .with (class {
  get build() { return super.build = require('./build') }
})
